// Workflow details
manifest {
    author              = 'Sydney Informatics Hub, University of Sydney'
    name                = 'GermlineStructuralV-nf'
    description         = 'Multi-caller germline structural variant calling pipeline'
    homePage            = 'https://github.com/Sydney-Informatics-Hub/Germline-StructuralV-nf'
    }

// Mandate a minimum version of nextflow required to run the pipeline
nextflowVersion     = '!>=20.07.1'

// resume pipeline from last successful process
resume	= true

// Set default parameters
params.version		= '1.0'
params.help		= false
params.input		= false
params.ref		= false
params.intervals	= false
params.outDir		= './results'
params.annotsvDir	= false
<<<<<<< HEAD
params.minSVsize  = 50
=======
params.annotsvMode	= 'both'
params.extraAnnotsvFlags = false
>>>>>>> upstream/main

// Preset use of containers with Singularity
singularity {
    enabled		= true
    autoMounts		= true
    }

// Containers
// mulled borrowed from nf-core manta/convertinversions.nf 
params.bcftools__container	= 'quay.io/biocontainers/bcftools:1.15.1--hfe4b78e_1'
params.mulled__container	= 'quay.io/biocontainers/mulled-v2-40295ae41112676b05b649e513fe7000675e9b84:0b4be2c719f99f44df34be7b447b287bb7f86e01-0' 
params.smoove__container	= 'brentp/smoove:v0.2.7'
params.survivor__container	= 'quay.io/biocontainers/survivor:1.0.7--hd03093a_2'
params.tiddit__container	= 'quay.io/biocontainers/tiddit:3.6.0--py310hc2b7f4b_0'
params.annotsv__container	= 'sydneyinformaticshub/annotsv:3.2.1'
params.manta__container		= 'quay.io/biocontainers/manta:1.6.0--h9ee0642_2'

// Job profiles 
profiles {
  local		{ includeConfig "config/local.config" }
  nimbus	{ includeConfig "config/nimbus.config" }
  gadi		{ includeConfig "config/gadi.config" }
  singularity	{ includeConfig "config/singularity.config" }
  setonix	{ includeConfig "config/setonix.config"	}
} 

// Fail a task if any command returns non-zero exit code
shell = ['/bin/bash', '-euo', 'pipefail']

// Resources for each process 
// default run resource parameters 
process {

// Smoove
withName: 'smoove' {
	cpus    = 4
	memory  = 40.GB
  }

// Manta
withName: 'manta' {
	cpus    = 10
	memory = 40.GB                                    
  }

// Tiddit
withName: 'tiddit_sv' {
	cpus = 4
	memory = 40.GB
  }

withName: 'tiddit_cov' {
	cpus = 1
	memory = 10.GB
  }

// Survivor
withName: 'survivor_merge' {
	cpus = 1
	memory = 10.GB
  }
  
// AnnotSV
withName: 'annotsv' {
	cpus = 1 
	memory = 10.GB
}}

// Define timestamp, to avoid overwriting existing trace 
def timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')

// Produce a workflow diagram
  dag {
    enabled = true
    file = "${params.outDir}/runInfo/GermlineStructuralV_dag_${timestamp}.svg"
  }

  report {
    enabled = true
    file = "${params.outDir}/runInfo/GermlineStructuralV_report_${timestamp}.html"
  }

  timeline {
    enabled = true
    overwrite = true
    file = "${params.outDir}/runInfo/GermlineStructuralV_timeline_${timestamp}.html"
  }

  trace {
    enabled = true
    overwrite = true
    file = "${params.outDir}/runInfo/GermlineStructuralV_trace_${timestamp}.txt"
    fields = 'name,status,realtime,cpus,%cpu,memory,%mem,rss'
  }
